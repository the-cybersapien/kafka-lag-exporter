kafka-lag-exporter {
  reporters.prometheus.port = 8000
  clusters = [
    {
      name = "a-cluster"
      bootstrap-brokers = "a-1.cluster-a.xyzcorp.com:9092,a-2.cluster-a.xyzcorp.com:9092,a-3.cluster-a.xyzcorp.com:9092"
      labels = {
        location = "ny"
        zone = "us-east"
      }
    },
    {
      name = "a-cluster-with-sasl-properties"
      bootstrap-brokers = "a-1.cluster-a.xyzcorp.com:9092,a-2.cluster-a.xyzcorp.com:9092,a-3.cluster-a.xyzcorp.com:9092"
      admin-client-properties = {
        ssl.endpoint.identification.algorithm = "https"
        security.protocol="SASL_SSL"
        sasl.mechanism="PLAIN"
        sasl.jaas.config="org.apache.kafka.common.security.plain.PlainLoginModule required username=\"USERNAME\" password=\"PASSWORD\";"
      }
      consumer-properties = {
        ssl.endpoint.identification.algorithm = "https"
        security.protocol="SASL_SSL"
        sasl.mechanism="PLAIN"
        sasl.jaas.config="org.apache.kafka.common.security.plain.PlainLoginModule required username=\"USERNAME\" password=\"PASSWORD\";"
      }
    },
    {
      name = "b-cluster-with-iam-auth"
      bootstrap-brokers = "b-1.cluster-b.xyzcorp.com:9092,b-2.cluster-b.xyzcorp.com:9092,b-3.cluster-b.xyzcorp.com:9092"
      admin-client-properties = {
        security.protocol="SASL_SSL"
        sasl.mechanism="AWS_MSK_IAM"
        sasl.jaas.config="software.amazon.msk.auth.iam.IAMLoginModule required;"
        sasl.client.callback.handler.class="software.amazon.msk.auth.iam.IAMClientCallbackHandler"
      }
      consumer-properties = {
        security.protocol="SASL_SSL"
        sasl.mechanism="AWS_MSK_IAM"
        sasl.jaas.config="software.amazon.msk.auth.iam.IAMLoginModule required;"
        sasl.client.callback.handler.class="software.amazon.msk.auth.iam.IAMClientCallbackHandler"
      }
    }
  ]
}
